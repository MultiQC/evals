version: '3'
services:
  # MinIO for S3-compatible storage
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO setup (create buckets)
  mc:
    image: minio/mc
    container_name: mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done;
      mc mb minio/warehouse;
      mc mb minio/iceberg-data;
      exit 0;
      "

  # Trino coordinator
  trino-coordinator:
    image: trinodb/trino:434
    container_name: trino-coordinator
    ports:
      - "8080:8080"
    volumes:
      - ./trino/etc:/etc/trino
      - ~/.aws:/root/.aws:ro
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_PROFILE=${AWS_PROFILE:-default}

  # Hive Metastore with PostgreSQL
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: metastore
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Hive Metastore for schema/table tracking
  hive-metastore:
    image: apache/hive:3.1.3
    container_name: hive-metastore
    ports:
      - "9083:9083"
    environment:
      DB_DRIVER: postgres
      DB_CONNECTION_URL: jdbc:postgresql://postgres:5432/metastore
      DB_USER: postgres
      DB_PASS: postgres
      AWS_REGION: ${AWS_REGION:-us-east-1}
      METASTORE_DB_HOSTNAME: postgres
    volumes:
      - ~/.aws:/root/.aws:ro
    depends_on:
      - postgres
      - minio
    command: /opt/hive/bin/hive --service metastore

  # Jupyter lab for running notebooks
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./data:/home/jovyan/data
      - ./exploring:/home/jovyan/exploring
      - ~/.aws:/home/jovyan/.aws:ro
      - .:/home/jovyan/workspace
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_PROFILE: ${AWS_PROFILE:-default}
    command: >
      start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''

volumes:
  minio-data:
  postgres-data: 